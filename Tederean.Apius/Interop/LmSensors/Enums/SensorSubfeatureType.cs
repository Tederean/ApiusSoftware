namespace Tederean.Apius.Interop.LmSensors
{

  public enum SensorSubfeatureType
  {
    IN_INPUT = SensorFeatureType.In << 8,
    IN_MIN,
    IN_MAX,
    IN_LCRIT,
    IN_CRIT,
    IN_AVERAGE,
    IN_LOWEST,
    IN_HIGHEST,
    IN_ALARM = (SensorFeatureType.In << 8) | 0x80,
    IN_MIN_ALARM,
    IN_MAX_ALARM,
    IN_BEEP,
    IN_LCRIT_ALARM,
    IN_CRIT_ALARM,

    FAN_INPUT = SensorFeatureType.Fan << 8,
    FAN_MIN,
    FAN_MAX,
    FAN_ALARM = (SensorFeatureType.Fan << 8) | 0x80,
    FAN_FAULT,
    FAN_DIV,
    FAN_BEEP,
    FAN_PULSES,
    FAN_MIN_ALARM,
    FAN_MAX_ALARM,

    TEMP_INPUT = SensorFeatureType.Temperature << 8,
    TEMP_MAX,
    TEMP_MAX_HYST,
    TEMP_MIN,
    TEMP_CRIT,
    TEMP_CRIT_HYST,
    TEMP_LCRIT,
    TEMP_EMERGENCY,
    TEMP_EMERGENCY_HYST,
    TEMP_LOWEST,
    TEMP_HIGHEST,
    TEMP_MIN_HYST,
    TEMP_LCRIT_HYST,
    TEMP_ALARM = (SensorFeatureType.Temperature << 8) | 0x80,
    TEMP_MAX_ALARM,
    TEMP_MIN_ALARM,
    TEMP_CRIT_ALARM,
    TEMP_FAULT,
    TEMP_TYPE,
    TEMP_OFFSET,
    TEMP_BEEP,
    TEMP_EMERGENCY_ALARM,
    TEMP_LCRIT_ALARM,

    POWER_AVERAGE = SensorFeatureType.Power << 8,
    POWER_AVERAGE_HIGHEST,
    POWER_AVERAGE_LOWEST,
    POWER_INPUT,
    POWER_INPUT_HIGHEST,
    POWER_INPUT_LOWEST,
    POWER_CAP,
    POWER_CAP_HYST,
    POWER_MAX,
    POWER_CRIT,
    POWER_MIN,
    POWER_LCRIT,
    POWER_AVERAGE_INTERVAL = (SensorFeatureType.Power << 8) | 0x80,
    POWER_ALARM,
    POWER_CAP_ALARM,
    POWER_MAX_ALARM,
    POWER_CRIT_ALARM,
    POWER_MIN_ALARM,
    POWER_LCRIT_ALARM,

    ENERGY_INPUT = SensorFeatureType.Energy << 8,

    CURR_INPUT = SensorFeatureType.Current << 8,
    CURR_MIN,
    CURR_MAX,
    CURR_LCRIT,
    CURR_CRIT,
    CURR_AVERAGE,
    CURR_LOWEST,
    CURR_HIGHEST,
    CURR_ALARM = (SensorFeatureType.Current << 8) | 0x80,
    CURR_MIN_ALARM,
    CURR_MAX_ALARM,
    CURR_BEEP,
    CURR_LCRIT_ALARM,
    CURR_CRIT_ALARM,

    HUMIDITY_INPUT = SensorFeatureType.Humidity << 8,

    VID = SensorFeatureType.Vid << 8,

    INTRUSION_ALARM = SensorFeatureType.Intrusíon << 8,
    INTRUSION_BEEP,

    BEEP_ENABLE = SensorFeatureType.BeepEnable << 8,

    UNKNOWN = int.MaxValue,
  }
}
